$date
	Mon Jul 24 23:23:23 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( s [3:0] $end
$var wire 1 " cout $end
$var wire 3 ) c [3:1] $end
$scope module c0 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , carry $end
$var wire 1 % cin $end
$var wire 1 - sum $end
$upscope $end
$scope module c1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 carry $end
$var wire 1 1 cin $end
$var wire 1 2 sum $end
$upscope $end
$scope module c2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 carry $end
$var wire 1 6 cin $end
$var wire 1 7 sum $end
$upscope $end
$scope module c3 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 " carry $end
$var wire 1 : cin $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0;
0:
09
08
17
06
05
04
13
12
11
00
0/
0.
0-
1,
1+
0*
b1 )
b110 (
b1 '
b100 &
1%
b1 $
b100 #
0"
b110 !
$end
#10
1"
1:
15
07
16
b111 )
10
0;
1-
b1 !
b1 (
02
14
19
1*
1.
03
b1101 $
b1101 '
b11 #
b11 &
#20
0"
0-
b1000 !
b1000 (
1;
0+
1/
04
09
0.
13
b10 $
b10 '
b101 #
b101 &
#30
1"
17
b100 !
b100 (
0;
14
18
b110 $
b110 '
b1101 #
b1101 &
#40
07
06
b101 )
00
12
b1010 !
b1010 (
1;
0/
19
b1100 $
b1100 '
#50
07
06
00
01
12
0"
b100 )
0,
b1011 !
b1011 (
1-
1+
09
0*
1.
08
0%
b101 $
b101 '
b110 #
b110 &
#60
