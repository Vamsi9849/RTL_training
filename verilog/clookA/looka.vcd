$date
	Sat Jul 15 15:47:41 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( c1 $end
$var wire 1 ) c2 $end
$var wire 1 * c3 $end
$var wire 1 % cin $end
$var wire 1 " cout $end
$var wire 1 + g0 $end
$var wire 1 , g1 $end
$var wire 1 - g2 $end
$var wire 1 . g3 $end
$var wire 1 / p0 $end
$var wire 1 0 p1 $end
$var wire 1 1 p2 $end
$var wire 1 2 p3 $end
$var wire 4 3 s [3:0] $end
$var wire 1 4 s0 $end
$var wire 1 5 s1 $end
$var wire 1 6 s2 $end
$var wire 1 7 s3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
07
06
15
14
bz 3
02
01
10
1/
1.
0-
0,
0+
0*
0)
0(
b1000 '
b1011 &
0%
b1000 $
b1011 #
1"
bz !
$end
#5
17
1*
05
1)
06
1(
11
04
1%
b1011 $
b1011 '
b1100 #
b1100 &
#15
