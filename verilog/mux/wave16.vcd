$date
	Fri Jul 14 11:31:08 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! y $end
$var reg 16 " in [15:0] $end
$var reg 4 # sel [3:0] $end
$scope module uut $end
$var wire 16 $ in [15:0] $end
$var wire 4 % sel [3:0] $end
$var wire 1 ! y $end
$var wire 4 & t [3:0] $end
$scope module m0 $end
$var wire 4 ' in [3:0] $end
$var wire 2 ( sel [1:0] $end
$var wire 1 ) y $end
$upscope $end
$scope module m1 $end
$var wire 4 * in [3:0] $end
$var wire 2 + sel [1:0] $end
$var wire 1 , y $end
$upscope $end
$scope module m2 $end
$var wire 4 - in [3:0] $end
$var wire 2 . sel [1:0] $end
$var wire 1 / y $end
$upscope $end
$scope module m3 $end
$var wire 4 0 in [3:0] $end
$var wire 2 1 sel [1:0] $end
$var wire 1 2 y $end
$upscope $end
$scope module m4 $end
$var wire 4 3 in [3:0] $end
$var wire 2 4 sel [1:0] $end
$var wire 1 ! y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 4
b1101 3
12
b1 1
b11 0
1/
b1 .
b1111 -
0,
b1 +
b0 *
1)
b1 (
b1010 '
b1101 &
b1 %
b11111100001010 $
b1 #
b11111100001010 "
1!
$end
#5
0!
b1100 &
b1100 3
0)
b0 (
b0 +
b0 .
b0 1
b0 #
b0 %
#10
b10 (
b10 +
b10 .
b100 &
b100 3
02
b10 1
b1 4
b110 #
b110 %
#13
b0 (
b0 +
b0 .
1!
b1100 &
b1100 3
12
b0 1
b11 4
b1100 #
b1100 %
#15
